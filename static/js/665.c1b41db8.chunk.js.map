{"version":3,"file":"static/js/665.c1b41db8.chunk.js","mappings":"6PAIaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAD5BL,EAAEM,iBACIL,EAAOD,EAAEO,cAAaJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEpBb,GACJgB,EAAAA,EAAAA,IAAS,CACPC,KAAMR,EAAKS,SAASD,KAAKE,MACzBC,MAAOX,EAAKS,SAASE,MAAMD,MAC3BE,SAAUZ,EAAKS,SAASG,SAASF,SAEnCG,SAAS,KAAD,EACVC,EAAAA,GAAAA,QAAc,4BACdd,EAAKe,QAAQb,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAEbY,EAAAA,GAAAA,MAAYZ,EAAAc,IAAS,uBAAuB,yBAAAd,EAAAe,OAAA,GAAAnB,EAAA,kBAE/C,gBAhBiBoB,GAAA,OAAAxB,EAAAyB,MAAA,KAAAC,UAAA,KAkBlB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAU7B,EAAc8B,aAAa,MAAKC,SAAA,EAC9CH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOlB,KAAK,aAE1Ba,EAAAA,EAAAA,MAAA,SAAAG,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQlB,KAAK,cAE3Ba,EAAAA,EAAAA,MAAA,SAAAG,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWlB,KAAK,iBAE9BiB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,eAG5B,ECvCe,SAASG,IACtB,OACEN,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAAAJ,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACnC,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport toast from 'react-hot-toast';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    try {\n      await dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      toast.success('Registration successful!');\n      form.reset();\n    } catch (error) {\n      toast.error(error || 'Failed to register.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input type=\"text\" name=\"name\" />\n      </label>\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","form","wrap","_context","prev","next","preventDefault","currentTarget","register","name","elements","value","email","password","unwrap","toast","reset","t0","stop","_x","apply","arguments","_jsxs","onSubmit","autoComplete","children","_jsx","type","Register","Helmet"],"sourceRoot":""}