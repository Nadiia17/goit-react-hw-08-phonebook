{"version":3,"file":"static/js/614.a374b312.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin: auto;\n`;\n\nexport const StyledLabel = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding: 8px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 8px;\n  background-color: ${p => p.theme.colors.buttonBg};\n  color: ${p => p.theme.colors.primaryText};\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${p => p.theme.colors.buttonHoverBg};\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.errorColor};\n  font-size: 14px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledButton,\n  StyledErrorMessage,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/selectors';\nimport toast from 'react-hot-toast';\n\nconst PhonebookSchema = Yup.object().shape({\n  name: Yup.string().min(3).required('Name is required'),\n  number: Yup.string()\n    .matches(\n      /^\\d{3}-\\d{3}-\\d{4}$/,\n      'Phone number is not valid. Must be XXX-XXX-XXXX'\n    )\n    .required('Phone number is required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const currentContacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={PhonebookSchema}\n      onSubmit={(values, actions) => {\n        const isContactExists = currentContacts.some(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        );\n        if (isContactExists) {\n          toast.error(`${values.name} is already in the phonebook`);\n        } else {\n          dispatch(addContact({ name: values.name, number: values.number }));\n          actions.resetForm();\n          toast.success(`${values.name} added to the phonebook`);\n        }\n      }}\n    >\n      <StyledForm>\n        <StyledLabel>\n          Name\n          <StyledField name=\"name\" placeholder=\"Enter name\" />\n          <StyledErrorMessage name=\"name\" component=\"div\" />\n        </StyledLabel>\n\n        <StyledLabel>\n          Number\n          <StyledField name=\"number\" placeholder=\"Enter number XXX-ХXX-ХХXX\" />\n          <StyledErrorMessage name=\"number\" component=\"div\" />\n        </StyledLabel>\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { FiUser, FiUserX } from 'react-icons/fi';\nimport { AiOutlinePhone } from 'react-icons/ai';\n\nexport const ContactItemContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactText = styled.div`\n  width: 200px;\n  margin: 0;\n  font-size: 16px;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: ${p => p.theme.colors.secondaryText};\n  color: ${p => p.theme.colors.background};\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${p => p.theme.colors.primaryText};\n  }\n`;\n\nexport const StyledContactIcon = styled(FiUser).attrs({\n  size: '1.2em',\n})`\n  margin-right: 8px;\n  vertical-align: middle;\n  color: ${p => p.theme.colors.primaryText};\n`;\n\nexport const StyledDeleteContact = styled(FiUserX).attrs({\n  size: '1.2em',\n})`\n  margin-right: 8px;\n  vertical-align: middle;\n  color: ${p => p.theme.colors.background};\n`;\n\nexport const StyledPhoneIcon = styled(AiOutlinePhone).attrs({\n  size: '1.2em',\n})`\n  margin-right: 8px;\n  vertical-align: middle;\n  color: ${p => p.theme.colors.primaryText};\n`;\n","import toast from 'react-hot-toast';\nimport {\n  ContactItemContainer,\n  ContactText,\n  DeleteButton,\n  StyledContactIcon,\n  StyledDeleteContact,\n  StyledPhoneIcon,\n} from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id))\n      .unwrap() // Розпакування Promise, що повертається createAsyncThunk\n      .then(() => {\n        toast.success('Contact deleted successfully');\n      })\n      .catch(() => {\n        toast.error('Failed to delete contact');\n      });\n  };\n\n  return (\n    <ContactItemContainer>\n      <ContactText>\n        <StyledContactIcon />\n        {name}\n      </ContactText>\n      <ContactText>\n        <StyledPhoneIcon />\n        {number}\n      </ContactText>\n\n      <DeleteButton onClick={handleDelete}>\n        <StyledDeleteContact />\n        Delete\n      </DeleteButton>\n    </ContactItemContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  width: 560px;\n  margin: 20px auto;\n`;\n\nexport const Contact = styled.li`\n  background-color: ${p => p.theme.colors.listItemBg};\n  margin-bottom: 8px;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"Loading\"\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor=\"#f2e9e4\"\n      color=\"#9a8c98\"\n    />\n  </LoaderContainer>\n);\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Contact, List } from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(`Error loading contacts: ${error}`);\n    }\n  }, [error]);\n\n  const filteredContacts = useSelector(selectVisibleContacts);\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <List>\n        {filteredContacts.map(contact => (\n          <Contact key={contact.id}>\n            <ContactItem\n              name={contact.name}\n              number={contact.number}\n              id={contact.id}\n            />\n          </Contact>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 300px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 8px;\n  margin-top: 5px;\n`;\n","import { FilterContainer, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FilterContainer>\n      <p>Find contacts by name</p>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name to find\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </FilterContainer>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts()); // Завантаження контактів при монтуванні сторінки\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","StyledField","Field","_templateObject3","StyledButton","_templateObject4","p","theme","colors","buttonBg","primaryText","buttonHoverBg","StyledErrorMessage","ErrorMessage","_templateObject5","errorColor","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","PhonebookSchema","Yup","shape","min","required","number","matches","ContactForm","dispatch","useDispatch","currentContacts","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","toast","concat","addContact","resetForm","children","_jsxs","placeholder","component","type","ContactItemContainer","ContactText","DeleteButton","secondaryText","background","StyledContactIcon","FiUser","attrs","size","StyledDeleteContact","FiUserX","StyledPhoneIcon","AiOutlinePhone","_templateObject6","ContactItem","_ref","id","onClick","deleteContact","unwrap","then","catch","List","Contact","listItemBg","LoaderContainer","Loader","MagnifyingGlass","visible","height","width","ariaLabel","wrapperClass","glassColor","color","ContactList","useEffect","fetchContacts","filteredContacts","_Fragment","map","FilterContainer","FilterInput","Filter","value","onChange","event","setFilter","target","Contacts"],"sourceRoot":""}